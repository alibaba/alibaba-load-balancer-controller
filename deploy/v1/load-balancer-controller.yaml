apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:load-balancer-controller
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - services
  - pods
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - services/status
  - pods/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - update
  - create
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - update
  - create
  - delete
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
  - delete
- apiGroups:
  - alibabacloud.com
  resources:
  - albconfigs
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
  - delete
- apiGroups:
  - alibabacloud.com
  resources:
  - albconfigs/status
  verbs:
  - update
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  - namespaces
  - services
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
  - delete
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
  - delete
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: load-balancer-controller
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:load-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:load-balancer-controller
subjects:
  - kind: ServiceAccount
    name: load-balancer-controller
    namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: load-balancer-config
  namespace: kube-system
data:
  cloud-config.conf: |-
    {
        "Global": {
            "routeTableIDs": ""
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: load-balancer-controller
    tier: control-plane
  name: load-balancer-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: load-balancer-controller
      tier: control-plane
  template:
    metadata:
      labels:
        app: load-balancer-controller
        tier: control-plane
    spec:
      containers:
        - command:
            - /load-controller-manager
            - --cloud-config=/etc/kubernetes/config/cloud-config.conf
            - --controllers=ingress
            - --leader-elect-resource-name=alb
            - --configure-cloud-routes=false
          image: registry.cn-beijing.aliyuncs.com/wg/alb:pure-ctl
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 8
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 10258
            timeoutSeconds: 15
          name: load-balancer-controller
          readinessProbe:
            failureThreshold: 8
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 10258
            timeoutSeconds: 15
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1200
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/kubernetes/config
              name: cloud-config
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: aliyun-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: load-balancer-controller
      serviceAccountName: load-balancer-controller
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: cloud-config.conf
                path: cloud-config.conf
            name: load-balancer-config
          name: cloud-config
